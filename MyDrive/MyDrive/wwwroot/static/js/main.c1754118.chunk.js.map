{"version":3,"sources":["context.js","service.js","loginpage.js","homepage.js","registerpage.js","App.js","reportWebVitals.js","index.js"],"names":["SessionContext","React","createContext","ServiceHost","listFolder","userid","folderid","token","callback","errorcallback","xhr","XMLHttpRequest","onload","response","onerror","status","open","setRequestHeader","send","JSON","stringify","UserId","FolderId","LoginPage","useState","username","setusername","password","setpassword","authErr","setAuthErr","history","useHistory","context","useContext","loginCallback","decoded","jwt_decode","updateContext","userId","userName","folderId","rootfolderid","push","loginErrorCallback","to","className","onChange","e","target","value","type","Button","onClick","passwordStream","TextEncoder","encode","Promise","resolve","crypto","subtle","digest","then","hashBuffer","hashHex","Array","from","Uint8Array","map","b","toString","padStart","join","UserName","Password","Login","HomePage","files","setFiles","listCallback","list","parse","listErrorcallback","uploadCallback","globalContext","uploadErrorCallback","onFileChange","formData","FormData","_","each","file","append","name","UploadFiles","console","log","length","id","multiple","fileType","fileName","RegisterPage","createAccountCallback","setusercreated","createAccountErrorCallback","errorcode","setusercreateerror","setUserName","password1","setPassword1","password2","setPassword2","usercreated","usercreateerror","disabled","CreateUser","undefined","App","getCookie","document","cookie","split","find","row","startsWith","setContext","Provider","newContext","defaults","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1754118.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const SessionContext = React.createContext();\r\n","import _ from 'underscore';\r\n\r\nconst ServiceHost = \"https://localhost:44370/\";\r\n\r\nexport function CreateUser(username, password, callback, errorcallback) {\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    // get a callback when the server responds\r\n    xhr.onload = callback;\r\n    xhr.onerror = () => errorcallback(xhr.status);\r\n    xhr.open('POST', `${ServiceHost}createuser`);\r\n    xhr.send({\r\n        UserName: username,\r\n        Password: password,\r\n    });\r\n};\r\n\r\nexport function Login(username, password, callback, errorcallback) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = () => callback(xhr.response);\r\n    xhr.onerror = () => errorcallback(xhr.status);\r\n    xhr.open('POST', `${ServiceHost}authenticate`);\r\n    xhr.send(JSON.stringify({\r\n        UserName: username,\r\n        Password: password,\r\n    }));\r\n}\r\n\r\nexport function listFolder(userid, folderid, token, callback, errorcallback) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = () => callback(xhr.response);\r\n    xhr.onerror = () => {\r\n        errorcallback(xhr.status);\r\n    }\r\n    xhr.open('POST', `${ServiceHost}listfolder`);\r\n    xhr.setRequestHeader('Authorization', `Bearer ${token}`);\r\n    xhr.send(JSON.stringify({\r\n        UserId: userid,\r\n        FolderId: folderid,\r\n    }));\r\n}\r\n\r\nexport function CreateFolder(userid, parentfolderid, foldername) {\r\n\r\n};\r\n\r\nexport function UploadFiles(userid, folderid, files, token, callback, errorcallback) {    \r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    _.each(files, file => formData.append(\r\n      \"file\",\r\n      file,\r\n      file.name\r\n    ));\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.onload = () => callback(xhr.response);\r\n    xhr.onerror = () => errorcallback(xhr.status);\r\n    xhr.open('POST', `${ServiceHost}uploadfile?userid=${userid}&folderid=${folderid}`);\r\n    xhr.setRequestHeader('Authorization', `Bearer ${token}`);\r\n    xhr.send(formData);\r\n};\r\n","\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Promise from 'bluebird';\r\n\r\nimport { SessionContext } from './context';\r\nimport { Login } from './service';\r\n\r\nexport function LoginPage() {\r\n    const [username, setusername] = useState(null);\r\n    const [password, setpassword] = useState(null);\r\n    const [authErr, setAuthErr] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const context = useContext(SessionContext)\r\n\r\n    const usernamechanged = (e) => {\r\n        setusername(e.target.value);\r\n    }\r\n\r\n    const passwordchanged = (e) => {\r\n        setpassword(e.target.value);\r\n    }\r\n\r\n    const loginCallback = (response) => {\r\n        if (response) {\r\n            var decoded = jwt_decode(response);\r\n            context.updateContext({\r\n                userId: decoded.userid,\r\n                userName: decoded.username,\r\n                folderId: decoded.rootfolderid,\r\n                token: response,                \r\n            });\r\n            history.push('/')\r\n            // parse JWT token and populate data into global context\r\n        } else {\r\n            setAuthErr(false);\r\n        }\r\n    };\r\n\r\n    const loginErrorCallback = (status) => {\r\n        setAuthErr(true);\r\n    };\r\n\r\n    const login = () => {\r\n        // hash password\r\n        const passwordStream = new TextEncoder().encode(password);\r\n        Promise.resolve(crypto.subtle.digest('SHA-256', passwordStream)).then(hashBuffer => {\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convert buffer to byte array\r\n            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\r\n            Login(username, hashHex, loginCallback, loginErrorCallback);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome to MyDrive, or your drive! Please log in</h1>\r\n            <h2>if you have not registered before, please register first</h2>\r\n            <Link to=\"/register\">Switch to register</Link>\r\n            <br />\r\n            <br />\r\n            <h2>User name</h2>\r\n            <input className=\"username\" onChange={usernamechanged} />\r\n            <h2>Password</h2>\r\n            <input className=\"password\" type=\"password\" onChange={passwordchanged} />\r\n            <Button onClick={login}>Login</Button>\r\n            {authErr && <div>Authentication failed, please try again</div>}\r\n        </div>\r\n    )\r\n};\r\n","import { Redirect } from 'react-router-dom';\r\nimport { useContext, useState } from 'react';\r\nimport { Input, Button } from 'react-bootstrap';\r\nimport Promise from 'bluebird';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport _ from 'underscore';\r\n\r\nimport { SessionContext } from './context';\r\nimport { listFolder, UploadFiles } from './service';\r\n\r\nexport function HomePage() {\r\n    const [files, setFiles] = useState(null);\r\n    let history = useHistory();\r\n\r\n    const listCallback = (response) => {\r\n        if (response) {\r\n            var list = JSON.parse(response);\r\n            setFiles(list);\r\n        }\r\n    };\r\n\r\n    const listErrorcallback = () => {\r\n        history.push('/login')\r\n    };\r\n\r\n    const uploadCallback = (response) => {\r\n        // on successful upload, call listFolder to reload the file list\r\n        listFolder(\r\n            context.globalContext.userId,\r\n            context.globalContext.folderId,\r\n            context.globalContext.token,\r\n            listCallback,\r\n            listErrorcallback\r\n        );\r\n    };\r\n\r\n    const uploadErrorCallback = () => {\r\n\r\n    };\r\n\r\n    const onCreateFolderClicks = () => {\r\n\r\n    }\r\n\r\n    const context = useContext(SessionContext);\r\n\r\n    if (!files) {\r\n        if (!context.globalContext || !context.globalContext.userId) {\r\n            return <Redirect to=\"/login\" />;\r\n        } else {\r\n            listFolder(\r\n                context.globalContext.userId,\r\n                context.globalContext.folderId,\r\n                context.globalContext.token,\r\n                listCallback,\r\n                listErrorcallback\r\n            );\r\n        }\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        // setSelectedFiles(e.target.files);\r\n        UploadFiles(\r\n            context.globalContext.userId,\r\n            context.globalContext.folderId,\r\n            e.target.files,\r\n            context.globalContext.token,\r\n            uploadCallback,\r\n            uploadErrorCallback\r\n        );\r\n    };\r\n\r\n    const uploadFile = () => (<div>\r\n        <input type=\"file\" id=\"input\" multiple onChange={onFileChange} />\r\n        </div>\r\n    );\r\n\r\n    const buildFileList = () => _.map(files, file => (<div className={file.fileType}>\r\n        {`${file.fileType === \"Folder\" ? \"+ \" : \"\"}${file.fileName}`}\r\n    </div>));\r\n\r\n    console.log(files);\r\n\r\n    return (\r\n        <div>\r\n            {(!files || files.length === 0)  && \r\n                <div>Seems you don't have anything here...</div>\r\n            }\r\n            <br/>            \r\n            {uploadFile()}\r\n            <br/>\r\n            <Button onClick={onCreateFolderClicks}>Create folder</Button>\r\n            <br/>\r\n            { (files && files.length > 0) && \r\n                buildFileList()\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useContext, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { SessionContext } from './context';\r\nimport { CreateUser } from './service';\r\n\r\nimport Promise from 'bluebird';\r\n\r\nexport function RegisterPage() {\r\n    const createAccount = () => {\r\n        // hash password\r\n        const passwordStream = new TextEncoder().encode(password1);\r\n        Promise.resolve(crypto.subtle.digest('SHA-256', passwordStream)).then(hashBuffer => {\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convert buffer to byte array\r\n            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\r\n            CreateUser(userName, hashHex, createAccountCallback, createAccountErrorCallback);\r\n        });\r\n    };\r\n\r\n    const createAccountCallback = () => {\r\n        setusercreated(true);\r\n    };\r\n\r\n    const createAccountErrorCallback = (errorcode) => {\r\n        setusercreateerror(errorcode);\r\n    }\r\n\r\n    const usernamechanged = (e) => {\r\n        setUserName(e.target.value);\r\n    };\r\n\r\n    const password1changed = (e) => {\r\n        setPassword1(e.target.value);\r\n    };\r\n\r\n    const password2changed = (e) => {\r\n        setPassword2(e.target.value);\r\n    };\r\n\r\n    const [userName, setUserName] = useState(null);\r\n    const [password1, setPassword1] = useState(null);\r\n    const [password2, setPassword2] = useState(null);\r\n    const [usercreated, setusercreated] = useState(false);\r\n    const [usercreateerror, setusercreateerror] = useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register MyDrive account here</h1>\r\n            <br />\r\n            <h2>User name</h2>\r\n            <input className=\"username\" onChange={usernamechanged} />\r\n            <h2>Password</h2>\r\n            <input className=\"password\" type=\"password\" onChange={password1changed} />\r\n            <h2>Repeat password</h2>\r\n            <input className=\"password2\" type=\"password\" onChange={password2changed} />\r\n            <br />\r\n            {password1 !== password2 &&\r\n                <div className=\"passwordunmatch\" >passwords don't match</div>\r\n            }\r\n            <Button disabled={!password1 || !password2 || password1 !== password2} onClick={createAccount}>Create account</Button>\r\n\r\n            {usercreated &&\r\n                <div><h2>Your account has been created successfully, please log in<Link to=\"/login\">Login</Link></h2>\r\n                </div>\r\n            }\r\n\r\n            {usercreateerror !== null && usercreateerror !== undefined && \r\n                <div><h2>Something went wrong, please try again</h2>\r\n                </div>}\r\n        </div>);\r\n};","import './App.css';\nimport React, { useContext, useState } from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport _ from 'underscore';\n\nimport { SessionContext } from './context';\nimport { LoginPage } from './loginpage';\nimport { HomePage } from './homepage';\nimport { RegisterPage } from './registerpage';\n\nfunction App() {\n  const getCookie = (name) => document.cookie\n    .split('; ')\n    .find(row => row.startsWith(name))\n    .split('=')[1];\n\n  const userId = getCookie(\"userid\");\n  const folderId = getCookie(\"folderid\");\n  const token = getCookie(\"jwttokencookie\");\n  const userName = getCookie(\"username\");\n\n  const [context, setContext] = useState({\n    userId,\n    userName,\n    folderId,\n    token,\n  });\n\n  const updateContext = (newContext) => {\n    setContext(_.defaults(newContext, context));\n  };\n\n  return (\n    <SessionContext.Provider value={{ globalContext: context, updateContext }}>\n      <Router>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n      </Router>\n    </SessionContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}