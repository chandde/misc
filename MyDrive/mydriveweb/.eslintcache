[{"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\index.js":"1","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\App.js":"2","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\reportWebVitals.js":"3","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\loginpage.js":"4","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\context.js":"5","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\registerpage.js":"6","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\homepage.js":"7","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\service.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1311,"mtime":1613621827346,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2619,"mtime":1613621827346,"results":"13","hashOfConfig":"10"},{"size":84,"mtime":1612309860563,"results":"14","hashOfConfig":"10"},{"size":2752,"mtime":1612314071657,"results":"15","hashOfConfig":"10"},{"size":6113,"mtime":1614187433229,"results":"16","hashOfConfig":"10"},{"size":3774,"mtime":1614187415775,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ro2qr9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\index.js",[],["38","39"],"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\App.js",["40","41"],"import './App.css';\nimport React, { useContext, useState } from 'react';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport _ from 'underscore';\n\nimport { SessionContext } from './context';\nimport { LoginPage } from './loginpage';\nimport { HomePage } from './homepage';\nimport { RegisterPage } from './registerpage';\n\nfunction App() {\n  const getCookie = (name) => {\n    const row = document.cookie\n      .split('; ')\n      .find(row => row.startsWith(name));\n\n    if (row) {\n      return row.split('=')[1];\n    }\n  };\n\n  const userId = getCookie(\"userId\");\n  const folderId = getCookie(\"folderId\");\n  const token = getCookie(\"jwttokencookie\");\n  const userName = getCookie(\"username\");\n\n  const [context, setContext] = useState({\n    userId,\n    userName,\n    folderId,\n    token,\n  });\n\n  const updateContext = (newContext) => {\n    setContext(_.defaults(newContext, context));\n  };\n\n  return (\n    <SessionContext.Provider value={{ globalContext: context, updateContext }}>\n      <Router>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n      </Router>\n    </SessionContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\reportWebVitals.js",[],"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\loginpage.js",["42"],"\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useContext, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Promise from 'bluebird';\r\n\r\nimport { SessionContext } from './context';\r\nimport { Login } from './service';\r\n\r\nexport function LoginPage() {\r\n    const [username, setusername] = useState(null);\r\n    const [password, setpassword] = useState(null);\r\n    const [authErr, setAuthErr] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const context = useContext(SessionContext)\r\n\r\n    const usernamechanged = (e) => {\r\n        setusername(e.target.value);\r\n    }\r\n\r\n    const passwordchanged = (e) => {\r\n        setpassword(e.target.value);\r\n    }\r\n\r\n    const loginCallback = (response) => {\r\n        if (response) {\r\n            var decoded = jwt_decode(response);\r\n            context.updateContext({\r\n                userId: decoded.userId,\r\n                userName: decoded.username,\r\n                folderId: decoded.rootfolderId,\r\n                token: response,                \r\n            });\r\n            history.push('/')\r\n            // parse JWT token and populate data into global context\r\n        } else {\r\n            setAuthErr(false);\r\n        }\r\n    };\r\n\r\n    const loginErrorCallback = (status) => {\r\n        setAuthErr(true);\r\n    };\r\n\r\n    const login = () => {\r\n        // hash password\r\n        const passwordStream = new TextEncoder().encode(password);\r\n        Promise.resolve(crypto.subtle.digest('SHA-256', passwordStream)).then(hashBuffer => {\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convert buffer to byte array\r\n            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\r\n            Login(username, hashHex, loginCallback, loginErrorCallback);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Welcome to MyDrive, or your drive! Please log in</h1>\r\n            <h2>if you have not registered before, please register first</h2>\r\n            <Link to=\"/register\">Switch to register</Link>\r\n            <br />\r\n            <br />\r\n            <h2>User name</h2>\r\n            <input className=\"username\" onChange={usernamechanged} />\r\n            <h2>Password</h2>\r\n            <input className=\"password\" type=\"password\" onChange={passwordchanged} />\r\n            <Button onClick={login}>Login</Button>\r\n            {authErr && <div>Authentication failed, please try again</div>}\r\n        </div>\r\n    )\r\n};\r\n","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\context.js",[],"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\registerpage.js",["43","44","45"],"\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useContext, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { SessionContext } from './context';\r\nimport { CreateUser } from './service';\r\n\r\nimport Promise from 'bluebird';\r\n\r\nexport function RegisterPage() {\r\n    const createAccount = () => {\r\n        // hash password\r\n        const passwordStream = new TextEncoder().encode(password1);\r\n        Promise.resolve(crypto.subtle.digest('SHA-256', passwordStream)).then(hashBuffer => {\r\n            const hashArray = Array.from(new Uint8Array(hashBuffer));                     // convert buffer to byte array\r\n            const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\r\n            CreateUser(userName, hashHex, createAccountCallback, createAccountErrorCallback);\r\n        });\r\n    };\r\n\r\n    const createAccountCallback = () => {\r\n        setusercreated(true);\r\n    };\r\n\r\n    const createAccountErrorCallback = (errorcode) => {\r\n        setusercreateerror(errorcode);\r\n    }\r\n\r\n    const usernamechanged = (e) => {\r\n        setUserName(e.target.value);\r\n    };\r\n\r\n    const password1changed = (e) => {\r\n        setPassword1(e.target.value);\r\n    };\r\n\r\n    const password2changed = (e) => {\r\n        setPassword2(e.target.value);\r\n    };\r\n\r\n    const [userName, setUserName] = useState(null);\r\n    const [password1, setPassword1] = useState(null);\r\n    const [password2, setPassword2] = useState(null);\r\n    const [usercreated, setusercreated] = useState(false);\r\n    const [usercreateerror, setusercreateerror] = useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register MyDrive account here</h1>\r\n            <br />\r\n            <h2>User name</h2>\r\n            <input className=\"username\" onChange={usernamechanged} />\r\n            <h2>Password</h2>\r\n            <input className=\"password\" type=\"password\" onChange={password1changed} />\r\n            <h2>Repeat password</h2>\r\n            <input className=\"password2\" type=\"password\" onChange={password2changed} />\r\n            <br />\r\n            {password1 !== password2 &&\r\n                <div className=\"passwordunmatch\" >passwords don't match</div>\r\n            }\r\n            <Button disabled={!password1 || !password2 || password1 !== password2} onClick={createAccount}>Create account</Button>\r\n\r\n            {usercreated &&\r\n                <div><h2>Your account has been created successfully, please log in<Link to=\"/login\">Login</Link></h2>\r\n                </div>\r\n            }\r\n\r\n            {usercreateerror !== null && usercreateerror !== undefined && \r\n                <div><h2>Something went wrong, please try again</h2>\r\n                </div>}\r\n        </div>);\r\n};","D:\\git\\misc\\MyDrive\\mydriveweb\\src\\homepage.js",["46","47"],"D:\\git\\misc\\MyDrive\\mydriveweb\\src\\service.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":27},{"ruleId":"52","severity":1,"message":"56","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":16},{"ruleId":"52","severity":1,"message":"57","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":18},{"ruleId":"52","severity":1,"message":"57","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":20},{"ruleId":"52","severity":1,"message":"58","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":24},{"ruleId":"52","severity":1,"message":"59","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":152,"column":19,"nodeType":"62","messageId":"63","endLine":152,"endColumn":39},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'SessionContext' is defined but never used.","'Promise' is defined but never used.","no-script-url","Script URL is a form of eval.","TemplateLiteral","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]